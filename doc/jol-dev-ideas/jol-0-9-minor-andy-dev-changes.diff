diff -r 9a5fff552b23 jol-core/pom.xml
--- a/jol-core/pom.xml	Fri Sep 22 17:29:07 2017 +0200
+++ b/jol-core/pom.xml	Wed Jul 24 01:40:58 2019 -0700
@@ -30,7 +30,7 @@
     <parent>
         <groupId>org.openjdk.jol</groupId>
         <artifactId>jol-parent</artifactId>
-        <version>0.9</version>
+        <version>0.9.1</version>
     </parent>
 
     <artifactId>jol-core</artifactId>
diff -r 9a5fff552b23 jol-core/src/main/java/org/openjdk/jol/info/GraphLayout.java
--- a/jol-core/src/main/java/org/openjdk/jol/info/GraphLayout.java	Fri Sep 22 17:29:07 2017 +0200
+++ b/jol-core/src/main/java/org/openjdk/jol/info/GraphLayout.java	Wed Jul 24 01:40:58 2019 -0700
@@ -44,7 +44,19 @@
 public class GraphLayout {
 
     /**
-     * Parse the object graph starting from the given instance.
+     * Parse the object graph starting from the given instances.
+     *
+     * During this method's execution, if objects parsed are being
+     * modified in the references that exist between them by other
+     * threads, there is not much that can be guaranteed about the set
+     * of parsed objects that are returned, except that it will
+     * include the objects in the roots parameter.
+     *
+     * Even if no objects being parsed are modified while parsing, it
+     * is possible for the set of objects returned to be incomplete.
+     * This can occur if multiple objects happen to have the same
+     * address at different times during the call, because of garbage
+     * collection moving them around in memory.
      *
      * @param roots root instances to start from
      * @return object graph
diff -r 9a5fff552b23 jol-core/src/main/java/org/openjdk/jol/info/GraphWalker.java
--- a/jol-core/src/main/java/org/openjdk/jol/info/GraphWalker.java	Fri Sep 22 17:29:07 2017 +0200
+++ b/jol-core/src/main/java/org/openjdk/jol/info/GraphWalker.java	Wed Jul 24 01:40:58 2019 -0700
@@ -34,6 +34,7 @@
 import java.util.IdentityHashMap;
 import java.util.List;
 import java.util.Set;
+import java.util.function.Predicate;
 
 /**
  * Basic class to walk object graphs.
@@ -57,6 +58,10 @@
     }
 
     public void walk() {
+        walk(null);
+    }
+
+    public void walk(Predicate<Object> stop) {
         List<GraphPathRecord> curLayer = new ArrayList<GraphPathRecord>();
         List<GraphPathRecord> newLayer = new ArrayList<GraphPathRecord>();
 
@@ -74,7 +79,7 @@
         while (!curLayer.isEmpty()) {
             newLayer.clear();
             for (GraphPathRecord next : curLayer) {
-                for (GraphPathRecord ref : peelReferences(next)) {
+                for (GraphPathRecord ref : peelReferences(next, stop)) {
                     if (visited.add(ref.obj())) {
                         visitObject(ref);
                         newLayer.add(ref);
@@ -92,7 +97,8 @@
         }
     }
 
-    private List<GraphPathRecord> peelReferences(GraphPathRecord r) {
+    private List<GraphPathRecord> peelReferences(GraphPathRecord r,
+                                                 Predicate<Object> stop) {
         Object o = r.obj();
 
         if (o == null) {
@@ -105,6 +111,12 @@
             return Collections.emptyList();
         }
 
+        if (stop != null && stop.test(o)) {
+            // The caller does not want any references from this
+            // object walked.
+            return Collections.emptyList();
+        }
+
         List<GraphPathRecord> result = new ArrayList<GraphPathRecord>();
 
         if (o.getClass().isArray()) {
diff -r 9a5fff552b23 jol-core/src/test/java/org/openjdk/jol/layouters/LayouterInvariantsTest.java
--- a/jol-core/src/test/java/org/openjdk/jol/layouters/LayouterInvariantsTest.java	Fri Sep 22 17:29:07 2017 +0200
+++ b/jol-core/src/test/java/org/openjdk/jol/layouters/LayouterInvariantsTest.java	Wed Jul 24 01:40:58 2019 -0700
@@ -19,7 +19,8 @@
         new X86_64_COOPS_DataModel(),
         new X86_64_DataModel()
     };
-    private static final int ITERATIONS = 20000;
+    //private static final int ITERATIONS = 20000;
+    private static final int ITERATIONS = 500;
 
     @Test
     public void testRaw() throws Exception {
diff -r 9a5fff552b23 pom.xml
--- a/pom.xml	Fri Sep 22 17:29:07 2017 +0200
+++ b/pom.xml	Wed Jul 24 01:40:58 2019 -0700
@@ -29,7 +29,7 @@
 
     <groupId>org.openjdk.jol</groupId>
     <artifactId>jol-parent</artifactId>
-    <version>0.9</version>
+    <version>0.9.1</version>
     <packaging>pom</packaging>
 
     <name>Java Object Layout: Parent</name>
